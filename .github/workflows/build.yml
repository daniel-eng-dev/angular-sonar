name: Build
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  angular:
    name: Angular Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      # {2}
      - name: Checkout the source code
        uses: actions/checkout@v2

      # {3}
      - name: Setup Node.js $
        uses: actions/setup-node@v3
        with:
          node-version: $
          cache: 'npm'
          cache-dependency-path: package-lock.json

      # {4}
      - name: Install dependencies
        run: npm ci
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 
      - name: Install dependencies
        run: yarn
      - name: Test and coverage
        run: ng test --coverage
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets. SONARCLOUD_TOKEN }}
     
# on:
#  push:
#    branches:
#      - main
#  pull_request:
#    types: [opened, synchronize, reopened]
# jobs:
#   sonarqube:
#     name: SonarQube
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0 
#       - name: Install dependencies
#         run: yarn
#       - name: Test and coverage
#         run: ng test --coverage
#       - name: SonarQube Scan
#         uses: SonarSource/sonarqube-scan-action@v4
